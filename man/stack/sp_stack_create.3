.\"  Staple - A general-purpose data structure library in pure C89.
.\"  Copyright (C) 2021  Randoragon
.\"
.\"  This library is free software; you can redistribute it and/or
.\"  modify it under the terms of the GNU Lesser General Public
.\"  License as published by the Free Software Foundation;
.\"  version 2.1 of the License.
.\"
.\"  This library is distributed in the hope that it will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\"  Lesser General Public License for more details.
.\"
.\"  You should have received a copy of the GNU Lesser General Public
.\"  License along with this library; if not, write to the Free Software
.\"  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
.\"--------------------------------------------------------------------------------
.TH SP_STACK_CREATE 3 DATE "libstaple-VERSION"
.SH NAME
sp_stack_create \- initialize a stack
.SH SYNOPSIS
.ad l
#include <staple.h>
.sp
struct sp_stack
.RB * sp_stack_create (size_t
.IR elem_size ,
size_t
.IR capacity )
.sp
Link with \fI-lstaple\fP.
.ad
.SH DESCRIPTION
The
.BR sp_stack_create ()
function allocates and initializes a new stack, returning its address.
.P
.I elem_size
denotes the size of a single element. This allows the user to store any kind of
data, by setting
.I elem_size
to
.BR sizeof ( data ).
For boolean data, a bit-precise specialization is available through the
.B SP_SIZEOF_BOOL
constant (for use with
.IR b -suffixed
functions).
.I elem_size
cannot be changed during the lifespan of a stack.
.P
.I capacity
denotes the initial number of elements that can be stored on the stack without
allocating more memory.
.I capacity
shall be dynamically increased whenever more space is needed.
Note that when
.I elem_size
is set to
.BR SP_SIZEOF_BOOL ,
.I capacity
is automatically rounded up to the nearest full byte.
.SH RETURN VALUE
If successful, the
.BR sp_stack_create ()
function shall return a valid pointer to the created stack. Otherwise, it shall
return
.BR NULL .
.SH ERRORS
The
.BR sp_stack_create ()
function shall fail if:
.IP \fBNULL\fP 1.5i
The buffer size
.RI ( elem_size "\ *\ " capacity )
exceeds
.IR SIZE_MAX .
.IP \fBNULL\fP 1.5i
Memory allocation failed.
.IP \fBNULL\fP 1.5i
.I capacity
is 0 (debug mode only).
.SH CONFORMING TO
See
.BR libstaple (7).
.SH SEE ALSO
.ad l
.BR libstaple (7),
.BR sp_stack (7),
.BR sp_stack_destroy (3),
.BR sp_stack_clear (3),
.BR sp_stack_push (3),
.BR sp_stack_peek (3),
.BR sp_stack_pop (3),
.BR sp_stack_insert (3),
.BR sp_stack_remove (3),
.BR sp_stack_qinsert (3),
.BR sp_stack_qremove (3),
.BR sp_stack_get (3),
.BR sp_stack_set (3),
.BR sp_stack_eq (3),
.BR sp_stack_copy (3),
.BR sp_stack_map (3),
.BR sp_stack_print (3)
